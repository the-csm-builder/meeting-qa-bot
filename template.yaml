AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Lex QA Bot

Globals:
  Function:
    Timeout: 120
    Runtime: python3.9

Resources:
  TranscriptBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: 'transcribed-data-outbound'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ConversationHistoryTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'ConversationHistory'
      AttributeDefinitions:
        - AttributeName: 'userID'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'userID'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: '1'
        WriteCapacityUnits: '1'

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: 'S3DynamoDBAccess'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                Resource: !Sub 'arn:aws:s3:::${TranscriptBucket}/*'
              - Effect: 'Allow'
                Action:
                  - 'dynamodb:*'
                Resource: !GetAtt 'ConversationHistoryTable.Arn'
                
  SummaryLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: 'Summary_QA_Lambda'
      CodeUri: lex-qa/
      Handler: app.lambda_handler
      Environment:
        Variables:
          OPENAI_API_KEY: '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'  # Replace with your actual key
      Role: !GetAtt 'LambdaExecutionRole.Arn'
